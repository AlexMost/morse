{
  "name": "browserify-shim",
  "version": "2.0.10",
  "description": "Makes CommonJS-incompatible modules browserifyable.",
  "main": "index.js",
  "scripts": {
    "test": "tap test/*.js",
    "shim-jquery": "npm install opener && cd ./examples/shim-jquery && mkdir ./js/build; npm install && node build.js && opener index.html",
    "shim-underscore": "npm install opener && cd ./examples/shim-underscore && mkdir ./js/build; npm install && node build.js && opener index.html"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/thlorenz/browserify-shim.git"
  },
  "keywords": [
    "browserify",
    "shim",
    "global",
    "globals",
    "transform",
    "window",
    "commonjs"
  ],
  "author": {
    "name": "Thorsten Lorenz",
    "email": "thlorenz@gmx.de",
    "url": "thlorenz.com"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "devDependencies": {
    "tap": "~0.3.3",
    "request": "~2.12.0",
    "jsdom": "~0.7.0",
    "browserify": "~3.0.0"
  },
  "dependencies": {
    "through": "~2.3.4"
  },
  "peerDependencies": {
    "browserify": ">= 2.3.0 < 4"
  },
  "readme": "#browserify-shim [![build status](https://secure.travis-ci.org/thlorenz/browserify-shim.png?branch=master)](http://travis-ci.org/thlorenz/browserify-shim)\n\n## Make CommonJS-Incompatible Files Browserifyable\n\n```js\nvar browserify = require('browserify')\n  , shim = require('browserify-shim');\n\nshim(browserify(), {\n  // jQuery attaches itself to the window as '$' so we assign the exports accordingly\n  jquery: { path: './js/vendor/jquery.js', exports: '$' }\n})\n.require(require.resolve('./js/entry.js'), { entry: true })\n.bundle(function (err, src) {\n  if (err) return console.error(err);\n\n  fs.writeFileSync(builtFile, src);\n});\n```\n\n## Installation\n\n    npm install browserify-shim\n\nFor a version compatible with browserify@1.x run `npm install browserify-shim@1.x` instead.\n\n## Features\n\nThe core features of browserify-shim are:\n\n- Shims **non-CommonJS** modules in order for them to be **browserified** by specifying an alias, the path to the file,\n  and the identifier under which the module attaches itself to the global `window` object.\n- Includes `depends` for  shimming libraries that depend on other libraries being in the global namespace.\n\nAdditionally, it handles the following real-world edge cases:\n\n- Modules that just declare a `var foo = ...` on the script level and assume it gets attached to the `window` object.\n  Since the only way they will ever be run is in the global context — \"ahem, … NO?!\"\n- Makes `define` and also `module` be `undefined`, in order to fix [improperly-authored\n  libraries](https://github.com/mhemesath/r2d3/blob/918bd076e4f980722438b2594d1eba53a522ce75/r2d3.v2.js#L222) that need\n  shimming but try anyway to use AMD or CommonJS. For more info read the comment inside [this\n  fixture](https://github.com/thlorenz/browserify-shim/blob/master/test/fixtures/shims/lib-with-exports-define-global-problem.js)\n\n## API\n\n`shim(browserifyInstance, shimconfig)` returns the `browserifyInstance` to allow chaining.\n\nThe browserify instance is created via `browserify([opts])`\n\nThe shimConfig is a hashmap of modules to be shimmed. Each has the following structure:\n  \n`alias: { path: 'path/to/file.js', exports: 'name' }`\n\n- `alias` the name under which you want to require the module (i.e. `jquery`)\n- `path` relative to your build script or a full path\n- `exports` the name under which the module attaches itself to the window or its execution context (i.e. `$`)\n\nIf exports is null, the script will just execute when required, however you don't need browserify-shim for this feature\nanymore. Instead use the `expose` option in your `browserify.require`.\nFor more information look at the [shim-underscore example](https://github.com/thlorenz/browserify-shim/tree/master/examples/shim-underscore).\n\n### Multi Shim Example\n\n```js\nshim(browserify(), {\n    jquery:     { path: './js/vendor/jquery.js', exports: '$' }\n  , d3:         { path: './js/vendor/d3.js', exports: 'd3' }\n})\n.require(require.resolve('./js/entry.js'), { entry: true })\n.bundle(function (err, src) {\n  [..]\n})\n```\n\n\n### Dependents\n\nSome libraries depend on other libraries to have attached their exports to the window for historical reasons :(.\n(Hopefully soon we can truly say that this bad design is history.)\n\nAs an example, [backbone.stickit](http://nytimes.github.com/backbone.stickit/) depends on Backbone, underscore.js,\nand jQuery or Zepto.\n\nWe would properly declare its dependents when shimming it as follows:\n\n```js\nshim(browserify(), {\n    jquery: { path: './js/vendor/jquery.js',  exports: '$' }\n  , 'backbone.stickit': {\n      , path: './js/vendor/backbone.stickit.js'\n      , exports: null\n        // Below we are declaring the dependencies and under what name/symbol \n        // they are expected to be attached to the window.\n      , depends: { jquery: '$', underscore: '_', backbone: 'Backbone' }  \n    }\n  })\n\n  // Underscore and backbone are commonJS compatible, so a simple require with an `expose` option works.\n  // You don't even need this if they're in the usual node_modules directories, instead of `./js/vendor`.\n  .require(require.resolve('./js/vendor/underscore.js'), { expose: 'underscore' })\n  .require(require.resolve('./js/vendor/backbone.js'), { expose: 'backbone' })\n\n  .require(require.resolve('./js/entry.js'), { entry: true })\n  .bundle(function (err, src) {\n    if (err) return console.error(err);\n\n    fs.writeFileSync(builtFile, src);\n  });\n```\n\nGiven this configuration browserify-shim will attach `$`, `_` and `Backbone` to the window after requiring it, so that\n`backbone.stickit` can find them there.\n\n**Note:** the order of shim declarations doesn't matter, i.e. we could have shimmed `backbone.stickit` at the very top\n(before the libraries it depends on).\n\n## Examples\nThe underscore example is only included for completeness. Since browserify v2.0, CommonJS-compatible modules don't need\nshimming anymore even if they reside in a folder other than `node_modules`.\n\n- [shim-jquery](https://github.com/thlorenz/browserify-shim/tree/master/examples/shim-jquery)\n- [shim-underscore](https://github.com/thlorenz/browserify-shim/tree/master/examples/shim-underscore)\n\n",
  "bugs": {
    "url": "https://github.com/thlorenz/browserify-shim/issues"
  },
  "homepage": "https://github.com/thlorenz/browserify-shim",
  "_id": "browserify-shim@2.0.10",
  "_from": "browserify-shim@>=2.0.10 <2.1.0"
}
